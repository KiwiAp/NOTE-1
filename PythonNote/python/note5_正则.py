请看：正则表达式30分钟入门教程！
https://www.cnblogs.com/deerchao/archive/2006/08/24/zhengzhe30fengzhongjiaocheng.html

1.正则

元字符：
.  : (所有字符-换行符)
\w : (字母+数字+_)
\d : (数字)
[a-zA-Y] : (字母)
[a-z0-9A-Y] : (数字+字母)
\s : (空白符 : 空格符' ',水平制表符'\t',垂直制表符'\v',换行符'\n',回车符'\r)
\b : (单词开始+单词结束)
^  : 开始
$  : 结束

反义:
\W  : 除(字母+数字+_)
\D  : 除(数字)
\S  : 除(空白符 : 空格符' ',水平制表符'\t',垂直制表符'\v',换行符'\n',回车符'\r)
\B  : 除(单词开始+单词结束)
[^...] : 除字符类


限定符：重复次数
*     : [0,∞]
+     : [1,∞]
?     : [0,1]
{n}   : [n]
{n,}  : [n,∞]
{n,m} : [n,m]

转译:
\

字符类:
[]

分支条件:
|

分组:
(exp)
(?<name>exp)          : 命名
(exp)\1               : 后项引用
(?<name>exp)\k<name>  : 命名的后项引用
(?:exp)               : 剥夺命名权

零宽断言:
(?=exp)	   : 匹配exp前面的位置
(?<=exp)   : 匹配exp后面的位置
(?!exp)	   : 匹配后面跟的不是exp的位置
(?<!exp)   : 匹配前面不是exp的位置

注释:
(?#comment)	这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读

贪婪与懒惰: 懒惰,尽可能少重复
*?     : [0,∞]
+?     : [1,∞]
??     : [0,1]
{n,}?  : [n,∞]
{n,m}? : [n,m]

例子:
[aeioq]          : 元音字母
[.?!]            : 标点符号
\a[a-zA-Y]\b     : 单词
\(?0\d{2}[) -]?\d{8} : 电话号码 ( (010)88886666,022-22334455,13660764755 )
www\..+\.com     : 网址
((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)  ： IP地址
\([^\)]*\)       : 括号



2.python的re模块
资源 : https://www.cnblogs.com/tina-python/p/5508402.html
compile()
match()
search()
*findall()   
finditer()
*split() 
sub()
subn()


